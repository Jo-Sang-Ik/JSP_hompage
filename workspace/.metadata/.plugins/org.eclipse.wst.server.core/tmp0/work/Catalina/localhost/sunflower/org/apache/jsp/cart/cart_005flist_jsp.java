/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.30
 * Generated at: 2020-05-07 02:40:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.cart;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.text.*;
import java.util.*;
import com.plantshop.cart.*;
import com.plantshop.product.*;

public final class cart_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/cart/../module/bottom.jsp", Long.valueOf(1587045541885L));
    _jspx_dependants.put("/cart/../module/top.jsp", Long.valueOf(1588731276364L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.plantshop.product");
    _jspx_imports_packages.add("com.plantshop.cart");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>장바구니</title>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.0/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link href=\"./css/cart_main.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"./css/cart_list.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"./js/cart_list.js\"></script>\r\n");
      out.write("</head>\r\n");

request.setCharacterEncoding("utf-8");

if (session.getAttribute("login_id") == null) {
	out.print("<script>alert('로그인을 후 주문목록을 사용해주세요!!'); location='../member/loginForm.jsp';</script>");
	return;
}

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"container\">\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/sunflower/module/etc.css\">\r\n");
      out.write("<script src=\"/sunflower/module/etc.js\"></script>\r\n");
      out.write("<header>\r\n");
      out.write("\t<div class=\"top_login\">\r\n");
 
request.setCharacterEncoding("utf-8"); 

String login_name = (String)session.getAttribute("login_name");
String login_id = (String)session.getAttribute("login_id");

session.setAttribute("login_id", login_id);

if(session.getAttribute("login_id") == null) { // 로그인이 되지 않은 상태

      out.write("\r\n");
      out.write("\t<div id=\"login\">\r\n");
      out.write("\t\t<a href=\"/sunflower/member/loginForm.jsp\">로그인</a>\r\n");
      out.write("\t\t<a href=\"/sunflower/member/joinForm.jsp\">회원가입</a>\r\n");
      out.write("\t\t<a href=\"/sunflower/cart/cart_list.jsp\">장바구니</a>\r\n");
      out.write("\t\t<a href=\"/sunflower/freeboard/freeboard_list.jsp\">고객센터</a>\r\n");
      out.write("\t</div>\r\n");
} else {
      out.write("\t<!-- 로그인이 된 상태 -->\r\n");
      out.write("\t<div id=\"login\">\r\n");
      out.write("\t\t<!-- admin이면 버튼이 나타남 -->\r\n");
      out.write("\t\t");
 if(login_id.equals("admin") == true) { login_name = "관리자"; 
      out.write("\r\n");
      out.write("\t\t\t<a href=\"/sunflower/product/product_list.jsp\">관리자 모드</a>\r\n");
      out.write("\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t<a>");
      out.print(login_name );
      out.write("님</a>\r\n");
      out.write("\t\t<a href=\"/sunflower/member/logout.jsp\">로그아웃</a>\r\n");
      out.write("\t\t<a href=\"/sunflower/member/select.jsp\">개인정보 조회</a>\r\n");
      out.write("\t\t<a href=\"/sunflower/cart/cart_list.jsp\">장바구니</a>\r\n");
      out.write("\t\t<a href=\"/sunflower/freeboard/freeboard_list.jsp\">고객센터</a>\r\n");
      out.write("\t</div>\r\n");
} 
      out.write("                   \r\n");
      out.write("\t</div>    \r\n");
      out.write("\t      <div id=\"total_menu\">\r\n");
      out.write("\t\t<div id=\"logo\">\r\n");
      out.write("\t\t\t<img class=\"imgbtn\" src=\"/sunflower/image/logo.png\" onclick=\"location.href='/sunflower/index.jsp'\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<nav id=\"title_menu\">\r\n");
      out.write("\t\t\t<form action=\"/sunflower/shop_list.jsp\" method=\"post\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" id=\"searchPname\" name=\"searchPname\" placeholder=\"상품명 검색\">\r\n");
      out.write("\t\t\t\t<input type=\"image\" src=\"/sunflower/image/search.png\" height=\"30px\">\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</nav>\t\r\n");
      out.write("\t\t<nav id=\"submenu_nav\">\r\n");
      out.write("\t\t\t<div id=\"submenu_item\">\r\n");
      out.write("\t\t\t\t<a href=\"/sunflower/shop_list.jsp\">전체 상품</a>\r\n");
      out.write("\t\t\t\t<a href=\"/sunflower/shop_list_item.jsp?item=new\">새로운 상품</a>\r\n");
      out.write("\t\t\t\t<a href=\"/sunflower/shop_list_item.jsp?item=best\">인기 상품</a>\r\n");
      out.write("\t\t\t\t<a href=\"/sunflower/shop_list_item.jsp?item=mditem\">추천 상품</a>\r\n");
      out.write("\t\t\t\t<a href=\"/sunflower/shop_list_item.jsp?item=sale\">할인 상품</a>\r\n");
      out.write("\t\t\t\t<a href=\"/sunflower/shop_list.jsp?category=11\">공기정화 식물</a>\r\n");
      out.write("\t\t\t\t<a href=\"/sunflower/shop_list.jsp?category=22\">인테리어 식물</a>\r\n");
      out.write("\t\t\t\t<div id=\"detail_menu\" class=\"detail_menu1\">\r\n");
      out.write("\t\t\t\t\t<a id=\"detail_title\" href=\"/sunflower/shop_list.jsp?category=33\">꽃선물</a>\r\n");
      out.write("\t\t\t\t\t<div id=\"detail_bar\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/sunflower/shop_list.jsp?category=331\">꽃다발</a><br>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/sunflower/shop_list.jsp?category=332\">꽃바구니</a><br>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/sunflower/shop_list.jsp?category=333\">꽃상자</a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"detail_menu\" class=\"detail_menu2\">\r\n");
      out.write("\t\t\t\t\t<a id=\"detail_title\" href=\"/sunflower/shop_list.jsp?category=44\">소품샵</a>\r\n");
      out.write("\t\t\t\t\t<div id=\"detail_bar\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/sunflower/shop_list.jsp?category=441\">화병</a><br>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/sunflower/shop_list.jsp?category=442\">꽃가위</a><br>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/sunflower/shop_list.jsp?category=443\">굿즈</a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t</div>\r\n");
      out.write("</header>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t<section>\r\n");
      out.write("\t\t<article id=\"content\">\r\n");
      out.write("\t\t\t<div class='move_page'>\r\n");
      out.write("\t\t\t\t<a href=\"../member/select.jsp\">개인정보 조회</a> <a id=\"current_page\"\r\n");
      out.write("\t\t\t\t\thref=\"./cart_list.jsp\">나의 장바구니</a> <a\r\n");
      out.write("\t\t\t\t\thref=\"../order/order_list.jsp?uid=");
      out.print(login_id);
      out.write("\">나의 주문 목록</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t");

				String pageNum = "1";
				String category = "";
				String searchPname = "";

				if (request.getParameter("pageNum") != null && !request.getParameter("pageNum").equals("")) {
					pageNum = request.getParameter("pageNum");
				}

				if (request.getParameter("category") != null && !request.getParameter("category").equals("")) {
					category = request.getParameter("category");
				}

				if (request.getParameter("searchPname") != null && !request.getParameter("searchPname").equals("")) {
					searchPname = request.getParameter("searchPname");
				}

				int qty = 0; // 수량
				int productcount = 0; // 품목수
				NumberFormat nf = NumberFormat.getInstance();
				String price_nf = ""; // 포맷형식을 가진 가격
				String sum = ""; // 수량 * 가격

				//DB 처리를 위한 변수
				String sname = "";
				String cart_pname = ""; // 카트에 담긴 상품의 이름을 보여주기 위함
				String uid = ""; // cart테이블로부터 각 상품의 회원 아이디를 받아옴
				int db_pid = 0; // 상품번호
				String small = "";

				int price = 0;
				int total = 0; // (수량 * 가격)을 누적한 값

				String url = "/plantshop"; // server.xml에서 로컬(절대)경로를 변경한 경로

				out.print("<h2>" + login_name + "님의 장바구니 목록</h2>");
				out.print("<table><tr>");
				out.print("<th width='8%'>카트번호</th>");
				out.print("<th width='22%'>상품정보</th>");
				out.print("<th width='10%'>상품번호</th>");
				out.print("<th width='10%'>제조사</th>");
				out.print("<th width='12%'>주문 수량</th>");
				out.print("<th width='14%'>판매가</th>");
				out.print("<th width='14%'>합계</th>");
				out.print("<th width='10%'>상품주문</th></tr>");

				// 1. cart 테이블로 부터 처리 - DB
				CartDBBean cartDBBean = CartDBBean.getInstance();
				List<CartDataBean> cartList = cartDBBean.getCartList(login_id, 0); // 현재 로그인된 아이디로 카트정보 불러옴
				
				// 2. product 테이블로 부터 재고량 받기 위해
				ProductDBBean proDBBean = ProductDBBean.getInstance();
				ProductDataBean product = null;
				
				if (cartList.size() < 1) { // 장바구니에 담긴 상품이 없을 때
					out.print("<tr><th colspan='8'>장바구니 담긴 상품이 없습니다.</th></tr>");
				} else { //장바구니에 담긴 상품이 있을 때
					for (CartDataBean cart : cartList) {
						++productcount;
						uid = cart.getUid();
						db_pid = cart.getPid();
						cart_pname = cart.getPname();
						sname = cart.getSname();
						qty = cart.getQuantity();
						price = cart.getPrice();
						small = cart.getSmall();

						price_nf = nf.format(price); // 포맷된 가격			
						sum = nf.format(price * qty); // 수량 * 가격
						total += (price * qty); // 총금액

						product = proDBBean.getProduct(db_pid); // 재고량 얻기위함
						
						out.println("<form name='cart_form' method='post' action='cart_update.jsp' onsubmit='cartUpdate(this)'>");
						out.println("<input type='hidden' name='stock' value='" + product.getStock() + "'>");
						out.println("<input type='hidden' name='cart_pname' value='" + cart_pname + "'>");
						
						out.println("<input type='hidden' name='pid' value='" + db_pid + "'>");
						out.println("<input type='hidden' name='uid' value='" + uid + "'>");
						out.println("<input type='hidden' name='pageNum' value='" + pageNum + "'>");
						out.println("<input type='hidden' name='category' value='" + category + "'>");
						out.println("<input type='hidden' name='searchPname' value='" + searchPname + "'>");
						
						out.println("<tr>");
						out.println("<td class='center'>" + productcount + "</td>");
						out.println("<td><a href='../product/product_detail.jsp?id=" + db_pid + "'>");
						out.println("<img id='p_img' src='" + url + "/" + small + "' width='110px' height='150px'>");
						out.println("<div id='p_name'>" + cart_pname + "</div></a></td>");
						out.println("<td class='center'>" + db_pid + "</td>");
						out.println("<td class='center'>" + sname + "</td>");
						out.println("<td class='center'>");

						if (qty > 1) { // 수량이 2이상일 때 - 버튼 있음
							out.println("<input type='button' class='cahnge_qty' value='-' onclick='changeQty(this.form, -1)'>");
						} else { // 수량이 1이하 일때 - 버튼 없음
							out.println("<input type='button' class='cahnge_qty' value='-' style='visibility: hidden'>");
						}
						out.println("<input  type='number' id='quantity' name='quantity' size='1' value='" + qty + "'>&nbsp;");
						out.println("<input class='cahnge_qty' type='button'  value='+' onclick='changeQty(this.form, 1)'>");
						out.println("<br><input class='form_btn' type='submit' value='수정'>&nbsp;");
						// onclick 시 홀따옴표의 중요성!! 한번갑싸주고 location경로도 한번 감싸준다.
						out.println("<input class='form_btn' type='button' onclick=\"location='cart_delete.jsp?pageNum="
								+ pageNum + "&category=" + category + "&searchPname=" + searchPname + "&pid=" + db_pid
								+ "&uid=" + uid + "'\" value='삭제'>");
						
						out.println("</td>");
						out.println("<td class='center'>" + price_nf + "원</td>");
						out.println("<td class='center'>" + sum + "원</td>");
						
						// 개별주문
						out.println("<td class='center'><a href='../order/order.jsp?total=" + (price * qty)
								+ "&productcount=1&uid=" + uid + "&pid=" + db_pid + "'>");
						out.println("<img src='./images/buy.png' class='cart_img'></a></td>"); 
						out.println("</tr></form>");
					}
				}
				out.println("<tr class='end_row'><td colspan='8'>주문상품 수 : " + productcount + "개 품목&nbsp;&nbsp;/&nbsp;&nbsp;");
				out.println("총 합계 금액 : " + nf.format(total) + "원</td></tr>");
				out.println("</table>");

				out.println("<div id='move'><a href='../shop_list.jsp?pageNum=" + pageNum + "&category=" + category
						+ "&searchPname=" + searchPname + "'>◀ 계속 쇼핑하기</a>&nbsp;&nbsp;");
				out.println("<a href='../order/order.jsp?total=" + total + "&productcount=" + productcount + "&uid=" + uid
						+ "'>전체주문하기 ▶</a><div>");
			
      out.write("\r\n");
      out.write("\t\t</article>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<footer>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\t<li>COMPANY 썬플라워 주식회사 OWNER 조상익 C.P.O 조상익 E-mail npngj95@naver.com CALL CENTER 070-1234-5678</li>\r\n");
      out.write("\t\t<li>MALL ORDER LICENSE 2019-구미원평동-0001 호 [사업자정보확인] BUSINESS LICENSE 111-11-11111\r\n");
      out.write("\t\t<li> ADDRESS (우) 39221 경상북도 구미시 구미중앙로 1길 11</li>\r\n");
      out.write("\t\t<li><p>Copyright The SUNFLOWER All right reserved / design by JO / \r\n");
      out.write("\t\tAgreement / 개인정보취급방침 / Guide</p></li>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<li>고객님은 안전거래를 위해 현금 등으로 결제시 저희 쇼핑몰에서 가입한 PG사의 구매안전서비스를 이용하실 수 있습니다.</li>\r\n");
      out.write("\t\t<li>KG 이니시스 에스크로 (서비스가입사실확인)</li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("</footer>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
